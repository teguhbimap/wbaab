@{
    ViewBag.Title = "View3";
    Layout = "~/Views/Shared/_WallboardLayout.cshtml";
}

@section scripts{
    <script src="~/Scripts/signalR/jquery-3.4.1.min.js"></script>
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/signalR/jquery.signalR-2.4.1.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <!--<script src="~/signalr/hubs"></script>-->
    <script type="text/javascript">
        function formatHHMMss(time) {
            var date = new Date(null);
            date.setSeconds(time);
            var result = date.toISOString().substr(11, 8);

            return result;
        }
        //Reference to simpleHub proxy
        var simpleHubProxy;
        var url = "@ViewBag.urlSignalR";
        //var lsThreshold = [50, 50, 50, 50, 50, 50, 50, 50];
        var lsThreshold = [];
        //
        var arrLabelInbound = [];
        var arrLabelOutbound = [];
        var arrDataInbound = [];
        var arrDataOutbound = [];
        //
        var lastPacketTime;
        var currentTime;
        var diffTime;
        //Write given text to log area
        //function writeToLog(log) {
        //    $("#txtLog").append(log + "&#10;&#13;")
        //}

        //Connect to the SignalR server and get the proxy for simpleHub
        function connect() {
            console.log("conn");

            $.getScript(url + "/hubs", function () {
                $.connection.hub.url = url;

                // Declare a proxy to reference the hub.
                simpleHubProxy = $.connection.simpleHub;

                //Reigster to the "AddMessage" callback method of the hub
                //This method is invoked by the hub
                simpleHubProxy.client.addMessage = function (name, message) {
                    lastPacketTime = Date.now();
                    console.log("lastPacketTime : " + lastPacketTime);
                    if (name == "adm_threshold") {
                        getThreshold();
                    }
                    //
                    if (message.substring(0, 8) == "acdcalls") {
                        arrLabelInbound = [];
                        arrLabelOutbound = [];
                        arrDataInbound = [];
                        arrDataOutbound = [];
                        var arrDataTemp = message.split(";");
                        //
                        var arrDataPart0 = arrDataTemp[0].split("|");
                        var arrDataPart1 = arrDataTemp[1].split("|");
                        var arrDataPart2 = arrDataTemp[2].split("|");
                        var arrDataPart3 = arrDataTemp[3].split("|");
                        //
                        arrLabelInbound = arrDataPart1[1].split(",");
                        arrDataInbound = arrDataPart0[1].split(",");
                        arrLabelOutbound = arrDataPart3[1].split(",");
                        arrDataOutbound = arrDataPart2[1].split(",");
                        //
                        //console.log(arrDataInbound);
                    } else {
                        var arrData = message.split("\r\n");
                        console.log(arrData.length);
                        if (arrData.length > 1) {
                            if (arrData[1].substring(0, 5) == ";Agen") {
                                agentReport(message);
                            } else if (arrData[1].substring(0, 5) == "Split") {
                                skillReport(message);
                            }
                        }
                    }
                };

                //Connect to hub
                $.connection.hub.start().done(function () {
                    //writeToLog("Connected.");
                    simpleHubProxy.server.setUserName("wb_ztl");
                });
            });
        }

        //Disconnect from the server
        function disconnect() {

            if (simpleHubProxy != null) {
                $.connection.hub.stop();
                simpleHubProxy = null;
                //writeToLog("Disconnected.");
                //$.connection.hub.stop().done( function () {
                //    simpleHubProxy = null;
                //    writeToLog("Disconnected.");
                //});
            }
        }

        var i = 0;
        var iCek = 0;
        setInterval(function () {
            i = i + 1;
            console.log("i : " + i);
            if (i == 5) {
                console.log("simpleHubProxy : " + simpleHubProxy);
                currentTime = Date.now();
                diffTime = currentTime - lastPacketTime;
                console.log("currTime - lastTime : " + currentTime + "-" + lastPacketTime + "=" + diffTime);
                if (lastPacketTime == undefined) {
                    iCek = iCek + 1;
                }
                if (diffTime > 15000) {
                    iCek = iCek + 1;
                }
                //
                console.log("iCek : " + iCek);
                if (iCek > 25) {
                    connect();
                    iCek = 0;
                }
                //
                if (simpleHubProxy == null) {
                    console.log("simpleHubProxy null");
                    connect();
                }
                i = 0;
            }
        }, 1000);

        function skillReport(msg) {
            var arrDataSkill = msg.split("\r\n");
            //
            var arrSkillName = arrDataSkill[1].split(";");
            var arrStaff = arrDataSkill[2].split(";");
            var arrAbn = arrDataSkill[3].split(";");
            var arrAcd = arrDataSkill[8].split(";");
            var arrAvail = arrDataSkill[7].split(";");
            var arrAux = arrDataSkill[6].split(";");
            var arrQue = arrDataSkill[4].split(";");
            var arrSl = arrDataSkill[5].split(";");
            var arrPercentAbn = arrDataSkill[12].split(";");
            var arrOut = arrDataSkill[10].split(";");
            var queColor = "";
            //
            if (parseInt(arrQue[1]) > 0) {
                queColor = "red";
            } else {
                queColor = "black";
            }
            //
            $("#tblInbound tbody").children().remove();
            $("#tblOutbound tbody").children().remove();
            var rows = "<tr style='font-weight: bold; font-size: 20px'>"
                + "<td>" + arrSkillName[1] + "</td>"
                + "<td>" + arrStaff[1] + "</td>"
                + "<td>" + arrAvail[1] + "</td>"
                + "<td>" + arrAcd[1] + "</td>"
                + "<td>" + arrAbn[1] + "</td>"
                + "<td style='font-weight: bold; color: " + queColor + "'>" + arrQue[1] + "</td>"
                + "<td>" + arrAux[1] + "</td>"
                + "<td>" + arrSl[1] + "</td>"
                + "<td>" + arrPercentAbn[1] + "</td>"
                + "</tr>";
            $("#tblInbound tbody").append(rows);

            var rows = "<tr style='font-weight: bold; font-size: 20px'>"
                + "<td>" + arrSkillName[2] + "</td>"
                + "<td>" + arrStaff[2] + "</td>"
                + "<td>" + arrOut[2] + "</td>"
                + "<td>" + arrAux[2] + "</td>"
                + "</tr>";
            $("#tblOutbound tbody").append(rows);
        }

        function agentReport(msg) {
            var arrDataAgent = msg.split("\r\n");
            //
            //console.log("length : " + arrDataAgent.length);
            //console.log(arrDataAgent[3]);
            var j = 0;
            var totAux = 0;
            var state = "";
            var auxReason = "";
            var image = "";
            var agentName = "";
            var time = "";
            var timeColor = "";
            var arrAUX = [];
            var arrAgentTemp = ""
            //
            for (j = 0; j < arrDataAgent.length - 1; j++) {
                arrAgentTemp = arrDataAgent[j].split(";");
                //console.log(arrDataAgent[i] + i);
                //
                if ((arrDataAgent[j].substring(0, 5) != "Agent") && (arrDataAgent[j].substring(0, 5) != ";Agen")) {
                    //console.log(arrAgentTemp);
                    arrAUX.push(arrAgentTemp);
                    totAux = totAux + 1;
                }
            }
            //
            var i = 0;
            //$("#tblAgentState tbody").children().remove();
            $("#feedList").children().remove();
            for (i = 0; i < 11; i++) {
                //
                if (i > arrAUX.length - 1) {
                    agentName = "-";
                    state = "-";
                    auxReason = "-";
                    time = "-";
                    image = "";
                } else {
                    if (arrAUX.length > 0) {
                        //console.log("lengthArrAux : " + arrAUX.length);
                        // console.log("arrAUX ke : " + i + ":" + arrAUX[i]);
                        agentName = arrAUX[i][1];
                        time = formatHHMMss(parseInt(arrAUX[i][7]));
                        state = arrAUX[i][5];
                        auxReason = arrAUX[i][4];
                        //console.log("agentName : " + arrAUX[i][1]);
                        console.log("lsThreshold : " + lsThreshold);
                        //
                        switch (state) {

                            case "AVAIL":
                                image = "/Content/img/auxReason/Icon/Available Icon-green.png";
                                timeColor = "black";
                                break;

                            case "AUX", "AUXOUT":
                                image = "/Content/img/auxReason/Icon/Outbound Calls to Agent Icon-green.png";
                                timeColor = "black";
                                break;
                        }
                        //
                        switch (auxReason) {

                            case "0":
                                image = "/Content/img/auxReason/Icon/Outbound Calls to Agent Icon-green.png";
                                timeColor = "black";
                                break;

                            case "Lunch":
                                image = "/Content/img/auxReason/Icon/Lunch Icon-green.png";
                                console.log(parseInt(arrAUX[i][7]) + "--" + parseInt(lsThreshold[1]));
                                if (parseInt(arrAUX[i][7]) > parseInt(lsThreshold[1])) {
                                    timeColor = "red";
                                } else {
                                    timeColor = "black";
                                }
                                break;

                            case "Toilet":
                                image = "/Content/img/auxReason/Icon/Restroom Icon-green.png";
                                if (parseInt(arrAUX[i][7]) > parseInt(lsThreshold[2])) {
                                    timeColor = "red";
                                } else {
                                    timeColor = "black";
                                }
                                break;

                            case "Pray":
                                image = "/Content/img/auxReason/Icon/Pray Icon-green.png";
                                if (parseInt(arrAUX[i][7]) > parseInt(lsThreshold[3])) {
                                    timeColor = "red";
                                } else {
                                    timeColor = "black";
                                }
                                break;

                            case "Coaching":
                                image = "/Content/img/auxReason/Icon/Coaching Session Icon-green.png";
                                if (parseInt(arrAUX[i][7]) > parseInt(lsThreshold[4])) {
                                    timeColor = "red";
                                } else {
                                    timeColor = "black";
                                }
                                break;

                            case "Walk In":
                                image = "/Content/img/auxReason/Icon/Call Evaluation Icon-green.png";
                                if (parseInt(arrAUX[i][7]) > parseInt(lsThreshold[5])) {
                                    timeColor = "red";
                                } else {
                                    timeColor = "black";
                                }
                                break;

                            case "Break":
                                image = "/Content/img/auxReason/Icon/AUX-break Icon-green.png";
                                if (parseInt(arrAUX[i][7]) > parseInt(lsThreshold[6])) {
                                    timeColor = "red";
                                } else {
                                    timeColor = "black";
                                }
                                break;

                            case "Meeting":
                                image = "/Content/img/auxReason/Icon/Meeting-Training Icon-green.png";
                                if (parseInt(arrAUX[i][7]) > parseInt(lsThreshold[7])) {
                                    timeColor = "red";
                                } else {
                                    timeColor = "black";
                                }
                                break;

                                //default:
                                //    image = "/Content/img/auxReason/Icon/Outbound Calls to Agent Icon-green.png";
                                //    timeColor = "black";
                        }
                        //

                    }
                }
                //console.log("i : " + i);
                //console.log("agenyName : " + agentName);
                //console.log("state : " + state);
                //console.log("time : " + time);
                //
                //var rows = "<tr>"
                //    + "<td><img src='" + image + "' class='img-circle img-size-32 mr-2' style='height:25px'></td>"
                //    + "<td>" + agentName + "</td>"
                //    + "<td style='color:" + timeColor + "'>" + time + "</td>"
                //    + "</tr>";
                //$("#tblAgentState tbody").append(rows);

                var li = "<li class='list-group-item clearfix'>"
                    + "<div class='activity-icon small'>"
                    + "<img src='" + image + "' />"
                    + "<i class='fa fa-camera'></i>"
                    + "</div>"
                    + "<div class='pull-left m-left-sm'>"
                    + "<span style='font-size: 15px'>" + agentName + ".</span><br />"
                    + "<small class='text-muted' style='font-size: 12px; color: " + timeColor + "'><i class='fa fa-clock-o'></i> " + time + "</small>"
                    + "</div>"
                    + "</li>";
                $("#feedList").append(li);
            }
        }

        function getThreshold() {
            $.ajax({
                type: 'GET',
                url: '@Url.Action("getThresholdList", "Admin", "")',
                dataType: 'json',
                async: false,
                success: function (data) {
                    var ii = 0;
                    lsThreshold = [];
                    for (ii = 0; ii < data.data.length; ii++) {
                        lsThreshold.push(data.data[ii]["thresholdTime"]);
                    }
                    console.log("lsThreshold " + lsThreshold);
                },
                error: function (request, status, error) {
                    alert('error on getPopEdit : ' + request.responseText);
                }
            });
        }
    </script>
}
<script type="text/javascript">
    function dateRealTime() {
        const d = new Date();
        const year = d.getFullYear();
        let month = d.getMonth() + 1;
        let date = d.getDate();
        let jam = d.getHours();
        let menit=
        if (month < 10) month = '0' + month;
        if (date < 10) date = '0' + date;

        const days = [
            'Minggu',
            'Senin',
            'Selasa',
            'Rabu',
            'Kamis',
            'Juma`at',
            'Sabtu'
        ];
        const dayIndex = d.getDay();
        const dayName = days[dayIndex];
        const formatted = dayName + ", " + date + "-" + month + "-" + year;
        //console.log(formatted);
        var ret = formatted;

        return ret;
    }
    function timeRealTime() {
        const d = new Date();
        const year = d.getFullYear();
        let month = d.getMonth() + 1;
        let date = d.getDate();

        let jam = d.getHours();
        let menit = d.getMinutes();
        let detik = d.getSeconds();

        if (jam < 10) jam = '0' + jam;
        if (menit < 10) menit = '0' + menit;
        if (detik < 10) detik = '0' + detik;
        
        const formatted = jam + ":" + menit + "-" + detik + " WIB";
        //console.log(formatted);
        var ret = formatted;

        return ret;
    }
    var iTimer = 0;
    setInterval(function () {
        iTimer = iTimer + 1;
        $("#timeReal").text(timeRealTime());
        $("#dateReal").text(dateRealTime());
        if (iTimer == 5) {
            chartInbound("chart");
        } else if (iTimer == 10) {
            chartOutbound("chart");
            iTimer = 0;
        }
    }, 1000);
    //
    $(document).ready(function () {
        ctxInbound = document.getElementById("bar-inbound");
        ctxOutbound = document.getElementById("bar-outbound");
        //
        chartInbound("chart");
        chartOutbound("chart");
        //
        getThreshold()
    });
    //
    function chartInbound(msg) {
        var arrDataChart = msg.split(";");
        var data = {};
        //console.log("lArrChart : " + arrDataChart.length);
        //
        if (arrDataChart.length > 0) {
            data = {};
            //
            data = {
                //labels: arrLabelInbound,
                labels: ["Andri", "Hendro", "Siti", "Asma", "Karyo", "Ucok", "Tatang", "Salwa", "Atun", "Sarah", "Aji", "Alisa", "Ridwan", "Lilis"],
                datasets: [
                    {
                        //label: "Access Web (Login)",
                        type: 'bar',
                        backgroundColor: 'rgb(241, 193, 26)',
                        borderColor: 'rgb(255, 255, 255)',
                        fill: false,
                        data: [2, 12, 7, 4, 22, 32, 47, 32, 12, 7, 14, 22, 32, 36]
                        //data: arrDataInbound
                    }
                ]
            };

            var bar = new Chart(ctxInbound, {
                type: 'bar',
                data: data,
                options: {
                    elements: {
                        rectangle: {
                            borderWidth: 2,
                            //borderColor: 'rgb(0, 255, 0)',
                            borderSkipped: 'bottom'
                        }
                    },
                    scales: {
                        xAxes: [{
                            ticks: {
                                autoSkip: false,
                                //maxRotation: 35,
                                //minRotation: 35,
                                fontColor: 'white',
                                fontSize: 15,
                                fontStyle: 'bold'
                            },
                            gridLines: {
                                display: false
                            }
                        }],
                        yAxes: [{
                            ticks: {
                                autoSkip: false,
                                fontColor: 'white',
                                fontSize: 10,
                                fontStyle: 'bold'
                            }
                        }]
                    },
                    legend: {
                        display: false,
                        position: 'bottom'
                    },
                    showTooltips: false,
                    animation: {
                        duration: 500,
                        easing: "easeOutQuart",
                        onComplete: function () {
                            var ctx = this.chart.ctx;
                            ctx.textAlign = 'center';
                            ctx.textBaseline = 'bottom';
                            //console.log("me" + this.data.datasets.dataset);
                            this.data.datasets.forEach(function (dataset, index) {
                                //index 0: ACD, 1: ABN, 2: CallsOffered
                                if (index == 0) {
                                    for (var i = 0; i < dataset.data.length; i++) {
                                        var model = dataset._meta[Object.keys(dataset._meta)[0]].data[i]._model,
                                            scale_max = dataset._meta[Object.keys(dataset._meta)[0]].data[i]._yScale.maxHeight;
                                        var y_pos = model.y - 15;
                                        //ctx.fillStyle = '#444';
                                        //
                                        ctx.fillStyle = 'rgb(6, 6, 6)'; //black
                                        var fontSize = 15;
                                        var fontStyle = 'bold';
                                        var fontFamily = 'Verdana';
                                        ctx.font = Chart.helpers.fontString(fontSize, fontStyle, fontFamily);
                                        //
                                        // Make sure data value does not get overflown and hidden
                                        // when the bar's value is too close to max value of scale
                                        // Note: The y value is reverse, it counts from top down
                                        if ((scale_max - model.y) / scale_max >= 0.93)
                                            y_pos = model.y + 20;
                                        ctx.fillText(dataset.data[i], model.x, y_pos);
                                    }
                                }

                            });
                        }
                    }
                }
            });
        }
    }
    function chartOutbound(msg) {
        var arrDataChart = msg.split(";");
        var data = {};
        function dynamicColors() {
            var r = Math.floor(Math.random() * 255);
            var g = Math.floor(Math.random() * 255);
            var b = Math.floor(Math.random() * 255);
            return "rgba(" + r + "," + g + "," + b + ", 0.5)";
        }
        function poolColors(a) {
            var pool = [];
            for (i = 0; i < a; i++) {
                pool.push(dynamicColors());
            }
            return pool;
        }
        var arrData = [];
        arrData = [2, 12, 7, 4, 22, 32, 47, 32, 12, 7, 14, 22, 32, 36];
        //console.log("lArrChart : " + arrDataChart.length);
        //
        if (arrDataChart.length > 0) {
            data = {};
            //
            data = {
                //labels: arrLabelOutbound,
                //labels: ["07:00", "07:30", "08:00", "08:30", "09:00", "09:30", "10:00", "10:30", "11:00", "11:30", "12:00", "12:30", "13:00", "13:30"],
                labels: ["Andri", "Hendro", "Siti", "Asma", "Karyo", "Ucok", "Tatang", "Salwa", "Atun", "Sarah", "Aji", "Alisa", "Ridwan", "Lilis"],
                datasets: [
                    {
                        //label: "Access Web (Login)",
                        type: 'bar',
                        //backgroundColor: 'rgb(241, 193, 26)',
                        backgroundColor: poolColors(arrData.length),
                        borderColor: 'rgb(255, 255, 255)',
                        fill: false,
                        data: arrData
                        //data: [2, 12, 7, 4, 22, 32, 47, 32, 12, 7, 14, 22, 32, 36]
                        //data: arrDataOutbound
                    }
                ]
            };

            var bar = new Chart(ctxOutbound, {
                type: 'bar',
                data: data,
                options: {
                    elements: {
                        rectangle: {
                            borderWidth: 2,
                            //borderColor: 'rgb(0, 255, 0)',
                            borderSkipped: 'bottom'
                        }
                    },
                    scales: {
                        xAxes: [{
                            ticks: {
                                autoSkip: false,
                                //maxRotation: 35,
                                //minRotation: 35,
                                fontColor: 'white',
                                fontSize: 15,
                                fontStyle: 'bold'
                            },
                            gridLines: {
                                display: false
                            }
                        }],
                        yAxes: [{
                            ticks: {
                                autoSkip: false,
                                fontColor: 'white',
                                fontSize: 10,
                                fontStyle: 'bold'
                            }
                        }]
                    },
                    legend: {
                        display: false,
                        position: 'bottom'
                    },
                    showTooltips: false,
                    animation: {
                        duration: 500,
                        easing: "easeOutQuart",
                        onComplete: function () {
                            var ctx = this.chart.ctx;
                            ctx.textAlign = 'center';
                            ctx.textBaseline = 'bottom';
                            //console.log("me" + this.data.datasets.dataset);
                            this.data.datasets.forEach(function (dataset, index) {
                                //index 0: ACD, 1: ABN, 2: CallsOffered
                                if (index == 0) {
                                    for (var i = 0; i < dataset.data.length; i++) {
                                        var model = dataset._meta[Object.keys(dataset._meta)[0]].data[i]._model,
                                            scale_max = dataset._meta[Object.keys(dataset._meta)[0]].data[i]._yScale.maxHeight;
                                        var y_pos = model.y - 15;
                                        //ctx.fillStyle = '#444';
                                        //
                                        ctx.fillStyle = 'rgb(6, 6, 6)'; //black
                                        var fontSize = 15;
                                        var fontStyle = 'bold';
                                        var fontFamily = 'Verdana';
                                        ctx.font = Chart.helpers.fontString(fontSize, fontStyle, fontFamily);
                                        //
                                        // Make sure data value does not get overflown and hidden
                                        // when the bar's value is too close to max value of scale
                                        // Note: The y value is reverse, it counts from top down
                                        if ((scale_max - model.y) / scale_max >= 0.93)
                                            y_pos = model.y + 20;
                                        ctx.fillText(dataset.data[i], model.x, y_pos);
                                    }
                                }

                            });
                        }
                    }
                }
            });
        }
    }
</script>
<div class="main-header clearfix">
    <div class="page-title">
        <img src="~/Content/endless/img/logo/logo_png_t.png" style="height:40px; width:150px; margin-left:0px" class="pull-left">
    </div>
    <ul class="page-stats">
        <li>
            <div class="value">
                <span>ZURICH</span>
                <h4>CONTACT CENTER</h4>
            </div>
            <span id="visits" class="sparkline"></span>
        </li>
        <li>
            <div class="value">
                <span>Tanggal : </span>
                <h4 id="dateReal"><strong></strong></h4>
            </div>
            <span id="balances" class="sparkline"></span>
        </li>

    </ul>
</div>

<div class="padding-md">
    <div class="row">
        <div class="col-lg-9">
            <div class="panel panel-info">
                <table id="tblInbound" border="1" class="table">
                    <thead>
                        <tr style="background: rgb(255, 137, 0); background: radial-gradient(circle, rgba(255, 137, 0) 100%, rgba(46,46,41,0.8522759445575105) 73%); color: white; font-weight:bold; font-size:20px">
                            <th>SKILL</th> 
                            <th>%SL</th>
                            <th>ABD</th>
                            <th>COF</th>
                            <th>ACD</th>
                            <th>AVAIL</th>
                            <th>ASA</th>
                            <th>QUE</th>
                            
                        </tr>
                    </thead>
                    <tbody>
                        <tr style="background: rgb(131, 140, 145);color:white; font-weight:bold; font-size:20px">
                            <td><img src="/UploadedFiles/imageFoto1/user.jpg" class="m-bottom-m" style="height:70px; width:130px";></td>
                            <td>2</td>
                            <td>2</td>
                            <td>2</td>
                            <td>2</td>
                            <td style="color:red; font-weight:bold">2</td>
                            <td>2</td>
                            <td>2</td>
                            
                        </tr>
                        <tr style="background: rgb(131, 140, 145);color:white;font-weight:bold; font-size:20px">
                            <td><img src="/UploadedFiles/imageFoto1/user2.jpg" class="m-bottom-m" style="height:70px; width:130px";></td>
                            <td>2</td>
                            <td>2</td>
                            <td>2</td>
                            <td>2</td>
                            <td style="color:red; font-weight:bold">2</td>
                            <td>2</td>
                            <td>2</td>

                        </tr>
                        <tr style="background: rgb(131, 140, 145);color:white;font-weight:bold; font-size:20px">
                            <td><img src="/UploadedFiles/imageFoto1/user3.jpg" class="m-bottom-m" style="height:70px; width:130px";></td>
                            <td>2</td>
                            <td>2</td>
                            <td>2</td>
                            <td>2</td>
                            <td style="color:red; font-weight:bold">2</td>
                            <td>2</td>
                            <td>2</td>

                        </tr>
                        <tr style="background: rgb(131, 140, 145);color:white;font-weight:bold; font-size:20px">
                            <td><img src="/UploadedFiles/imageFoto1/user.jpg" class="m-bottom-m" style="height:70px; width:130px";></td>
                            <td>2</td>
                            <td>2</td>
                            <td>2</td>
                            <td>2</td>
                            <td style="color:red; font-weight:bold">2</td>
                            <td>2</td>
                            <td>2</td>

                        </tr>
                        <tr style="background: rgb(131, 140, 145);color:white;font-weight:bold; font-size:20px">
                            <td><img src="/UploadedFiles/imageFoto1/user.jpg" class="m-bottom-m" style="height:70px; width:130px";></td>
                            <td>2</td>
                            <td>2</td>
                            <td>2</td>
                            <td>2</td>
                            <td style="color:red; font-weight:bold">2</td>
                            <td>2</td>
                            <td>2</td>

                        </tr>
                        <tr style="background: rgb(131, 140, 145);color:white; font-weight:bold; font-size:20px">
                            <td><img src="/UploadedFiles/imageFoto1/user.jpg" class="m-bottom-m" style="height:70px; width:130px";></td>
                            <td>2</td>
                            <td>2</td>
                            <td>2</td>
                            <td>2</td>
                            <td style="color:red; font-weight:bold">2</td>
                            <td>2</td>
                            <td>2</td>

                        </tr>
                        <tr style="background: rgb(131, 140, 145);color:white; font-weight:bold; font-size:20px">
                            <td><img src="/UploadedFiles/imageFoto1/user.jpg" class="m-bottom-m" style="height:70px; width:130px";></td>
                            <td>2</td>
                            <td>2</td>
                            <td>2</td>
                            <td>2</td>
                            <td style="color:red; font-weight:bold">2</td>
                            <td>2</td>
                            <td>2</td>

                        </tr>
                        <tr style="background: rgb(131, 140, 145);color:white;font-weight:bold; font-size:20px">
                            <td><img src="/UploadedFiles/imageFoto1/user.jpg" class="m-bottom-m" style="height:70px; width:130px";></td>
                            <td>2</td>
                            <td>2</td>
                            <td>2</td>
                            <td>2</td>
                            <td style="color:red; font-weight:bold">2</td>
                            <td>2</td>
                            <td>2</td>

                        </tr>
                        <tr style="background: rgb(131, 140, 145);color:white;font-weight:bold; font-size:20px">
                            <td><img src="/UploadedFiles/imageFoto1/user.jpg" class="m-bottom-m" style="height:70px; width:130px";></td>
                            <td>2</td>
                            <td>2</td>
                            <td>2</td>
                            <td>2</td>
                            <td style="color:red; font-weight:bold">2</td>
                            <td>2</td>
                            <td>2</td>

                        </tr>
                        <tr style="background: rgb(131, 140, 145);color:white;font-weight:bold; font-size:20px">
                            <td><img src="/UploadedFiles/imageFoto1/user.jpg" class="m-bottom-m" style="height:70px; width:130px";></td>
                            <td>2</td>
                            <td>2</td>
                            <td>2</td>
                            <td>2</td>
                            <td style="color:red; font-weight:bold">2</td>
                            <td>2</td>
                            <td>2</td>

                        </tr>
                        <tr style="background: rgb(131, 140, 145);color:white;font-weight:bold; font-size:20px">
                            <td><img src="/UploadedFiles/imageFoto1/user.jpg" class="m-bottom-m" style="height:70px; width:130px";></td>
                            <td>2</td>
                            <td>2</td>
                            <td>2</td>
                            <td>2</td>
                            <td style="color:red; font-weight:bold">2</td>
                            <td>2</td>
                            <td>2</td>

                        </tr>
                
                    </tbody>
                </table>
            </div>
            @*<div class="panel bg-info fadeInDown animation-delay4">
                <div class="panel-heading clearfix">
                    <span class="pull-left"><i class="fa fa-bar-chart-o fa-lg"></i> Total Inbound Per Agent</span>
                </div>
                <div class="panel-body">
                    <canvas id="bar-inbound" width="500" height="80"></canvas>
                </div>
            </div>*@
            <div class="panel panel-info">
                <table id="tblOutbound" class="table table-striped">
                    @*<thead>
                        <tr style="background: rgb(63,94,251); background: radial-gradient(circle, rgba(63,94,251,1) 46%, rgba(46,46,41,0.8522759445575105) 73%); color: white; font-weight:bold; font-size:20px">
                            <th>Skill</th>
                            <th>Staff</th>
                            <th>OUT</th>
                            <th>AUX</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr style="font-weight:bold; font-size:20px">
                            <td>OUTBOUND</td>
                            <td>2</td>
                            <td>2</td>
                            <td>2</td>
                        </tr>
                    </tbody>*@
                </table>
            </div>
            @*<div class="panel bg-success fadeInDown animation-delay5">
                <div class="panel-heading clearfix">
                    <span class="pull-left"><i class="fa fa-bar-chart-o fa-lg"></i> Total Outbound Per Agent</span>
                </div>
                <div class="panel-body">
                    <canvas id="bar-outbound" width="500" height="80"></canvas>
                </div>
            </div>*@
        </div>
        @*<div class="col-lg-3">
                <div class="panel panel-warning">
                    <div class="panel-body">
                        <table id="tblAgentState" class="table table-striped">
                            <thead>
                                <tr>
                                    <th>Icon</th>
                                    <th>Agent Name</th>
                                    <th>Time</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>Image</td>
                                    <td>Agent Name</td>
                                    <td>00:00:00</td>
                                </tr>
                                <tr>
                                    <td>Image</td>
                                    <td>Agent Name</td>
                                    <td>00:00:00</td>
                                </tr>
                                <tr>
                                    <td>Image</td>
                                    <td>Agent Name</td>
                                    <td>00:00:00</td>
                                </tr>
                                <tr>
                                    <td>Image</td>
                                    <td>Agent Name</td>
                                    <td>00:00:00</td>
                                </tr>
                                <tr>
                                    <td>Image</td>
                                    <td>Agent Name</td>
                                    <td>00:00:00</td>
                                </tr>
                                <tr>
                                    <td>Image</td>
                                    <td>Agent Name</td>
                                    <td>00:00:00</td>
                                </tr>
                                <tr>
                                    <td>Image</td>
                                    <td>Agent Name</td>
                                    <td>00:00:00</td>
                                </tr>
                                <tr>
                                    <td>Image</td>
                                    <td>Agent Name</td>
                                    <td>00:00:00</td>
                                </tr>
                                <tr>
                                    <td>Image</td>
                                    <td>Agent Name</td>
                                    <td>00:00:00</td>
                                </tr>
                                <tr>
                                    <td>Image</td>
                                    <td>Agent Name</td>
                                    <td>00:00:00</td>
                                </tr>
                                <tr>
                                    <td>Image</td>
                                    <td>Agent Name</td>
                                    <td>00:00:00</td>
                                </tr>
                                <tr>
                                    <td>Image</td>
                                    <td>Agent Name</td>
                                    <td>00:00:00</td>
                                </tr>
                                <tr>
                                    <td>Image</td>
                                    <td>Agent Name</td>
                                    <td>00:00:00</td>
                                </tr>
                                <tr>
                                    <td>Image</td>
                                    <td>Agent Name</td>
                                    <td>00:00:00</td>
                                </tr>
                                <tr>
                                    <td>Image</td>
                                    <td>Agent Name</td>
                                    <td>00:00:00</td>
                                </tr>
                                <tr>
                                    <td>Image</td>
                                    <td>Agent Name</td>
                                    <td>00:00:00</td>
                                </tr>
                                <tr>
                                    <td>Image</td>
                                    <td>Agent Name</td>
                                    <td>00:00:00</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div> /panel
            </div>*@
        <div class="col-lg-3">
            <div class="panel panel-default">
                <ul class="list-group collapse in" id="feedList">
                    <li class="list-group-item clearfix">
                        <div class="activity-icon small">
                            <img src="~/Content/img/auxReason/Icon/Available Icon-green.png" />
                            <i class="fa fa-camera"></i>
                        </div>
                        <div class="pull-left m-left-sm">
                            <span style="font-size:20px">Andri</span><br />
                            <small class="text-muted" style="font-size:15px"><i class="fa fa-clock-o"></i> 00:15:00</small>
                        </div>
                    </li>
                    <li class="list-group-item clearfix">
                        <div class="activity-icon bg-success small">
                            <img src="~/Content/img/auxReason/Icon/Available Icon-green.png" />
                            <i class="fa fa-usd"></i>
                        </div>
                        <div class="pull-left m-left-sm">
                            <span style="font-size:20px">Hendro</span><br />
                            <small class="text-muted" style="font-size:15px"><i class="fa fa-clock-o"></i> 00:15:00</small>
                        </div>
                    </li>
                    <li class="list-group-item clearfix">
                        <div class="activity-icon bg-info small">
                            <i class="fa fa-comment"></i>
                        </div>
                        <div class="pull-left m-left-sm">
                            <span style="font-size:20px">Siti</span><br />
                            <small class="text-muted" style="font-size:15px"><i class="fa fa-clock-o"></i> 00:15:00</small>
                        </div>
                    </li>
                    <li class="list-group-item clearfix">
                        <div class="activity-icon bg-success small">
                            <i class="fa fa-usd"></i>
                        </div>
                        <div class="pull-left m-left-sm">
                            <span style="font-size:20px">Asma</span><br />
                            <small class="text-muted" style="font-size:15px"><i class="fa fa-clock-o"></i> 00:00:12</small>
                        </div>
                    </li>
                    <li class="list-group-item clearfix">
                        <div class="activity-icon bg-success small">
                            <img src="~/Content/img/auxReason/Icon/Available Icon-green.png" />
                            <i class="fa fa-usd"></i>
                        </div>
                        <div class="pull-left m-left-sm">
                            <span style="font-size:20px">Karyo</span><br />
                            <small class="text-muted" style="font-size:15px"><i class="fa fa-clock-o"></i> 00:00:10</small>
                        </div>
                    </li>
                    <li class="list-group-item clearfix">
                        <div class="activity-icon bg-info small">
                            <i class="fa fa-comment"></i>
                        </div>
                        <div class="pull-left m-left-sm">
                            <span style="font-size:20px">Ucok</span><br />
                            <small class="text-muted" style="font-size:15px"><i class="fa fa-clock-o"></i> 00:15:00</small>
                        </div>
                    </li>
                    <li class="list-group-item clearfix">
                        <div class="activity-icon small">
                            <img src="~/Content/img/auxReason/Icon/Available Icon-green.png" />
                            <i class="fa fa-camera"></i>
                        </div>
                        <div class="pull-left m-left-sm">
                            <span style="font-size:20px">Tatang</span><br />
                                                                      <small class="text-muted" style="font-size:15px"><i class="fa fa-clock-o"></i> 00:15:00</small>
                        </div>
                    </li>
                    <li class="list-group-item clearfix">
                        <div class="activity-icon bg-success small">
                            <img src="~/Content/img/auxReason/Icon/Available Icon-green.png" />
                            <i class="fa fa-usd"></i>
                        </div>
                        <div class="pull-left m-left-sm">
                            <span style="font-size:20px">Salwa</span><br />
                                                                     <small class="text-muted" style="font-size:15px"><i class="fa fa-clock-o"></i> 00:15:00</small>
                        </div>
                    </li>
                    <li class="list-group-item clearfix">
                        <div class="activity-icon bg-info small">
                            <i class="fa fa-comment"></i>
                        </div>
                        <div class="pull-left m-left-sm">
                            <span style="font-size:20px">Atun</span><br />
                                                                    <small class="text-muted" style="font-size:15px"><i class="fa fa-clock-o"></i> 00:15:00</small>
                        </div>
                    </li>
                    <li class="list-group-item clearfix">
                        <div class="activity-icon bg-info small">
                            <i class="fa fa-comment"></i>
                        </div>
                        <div class="pull-left m-left-sm">
                            <span style="font-size:20px">Sarah</span><br />
                                                                     <small class="text-muted" style="font-size:15px"><i class="fa fa-clock-o"></i> 00:15:00</small>
                        </div>
                    </li>                    
                </ul><!-- /list-group -->
                <div class="loading-overlay">
                    <i class="loading-icon fa fa-refresh fa-spin fa-lg"></i>
                </div>
            </div><!-- /panel -->
        </div>
    </div>
</div>






